@model HiveData.ViewModels.PostFeedViewModel
@using Microsoft.AspNet.Identity;
@using PagedList.Mvc;
@using HiveData.Repository;
@{
    ViewBag.Title = "Home Page";
    string userid = User.Identity.GetUserId();
    int postid = 0;
    int id = 0;
    if (ViewBag.IsAdmin == null)
    { ViewBag.IsAdmin = false; }
}

@Scripts.Render("~/Content/Scripts/Post.js")

<div class="container">
    @Html.Partial("HomeSidebarPartial")
    <div class="col-md-9">
        <div class="trending-content-input">
            <h3>Create a Post.</h3>

            @using (Html.BeginForm("Create", "Post", FormMethod.Post, new { name = "createPost", onsubmit = "return validateForm()" }))
            {
                <input id="postInput" class="post-submit" type="text" name="input" maxlength="280" placeholder="Say something.." />
                @*<div class="form-group">
                        <textarea id="postInput" class="post-submit" name="input" maxlength="280" placeholder="Say something.."></textarea>
                    </div>*@
                <button class="btn btn-primary post-button" type="submit">
                    <span>Post &nbsp;</span>
                    <i class="glyphicon glyphicon-pencil"></i>
                </button>
            }
            <div id="remaining-chars" class="text-right counter-margin">280 characters remaining</div>
        </div>
    </div>


    <div class="row profile">
        <div class="col-md-9">
            @{ var i = 0; }
            @foreach (var item in Model.PostList)
            {
                i += 1;
                var divId = "post" + i;
                if (item.Shared == true)
                {
                    string authorName = Model.GetFirstName(item.AuthorPost.PostId) + " " + Model.GetLastName(item.AuthorPost.PostId);
                    int authorPostID = item.AuthorPost.PostId;
                    <div class="profile-content-pane">
                        <div id="@(divId + "_1")" class="media">
                            <div id="@(divId + "_2")" class="media-body">
                                <p>Shared a post from @authorName</p>
                                <div id="@(divId+"_3")" class="profile-content-pane-share">
                                    <a class="pull-left" href="@Url.Action("ViewProfile", "Profile", new { id = Model.GetProfileId(authorPostID) })">
                                        @if (Model.GetUserPicture(authorPostID) == null)
                                        {
                                            <img class="post-share-img circular-image" src="~/Content/Img/profile-image-placeholder.png" width="64" height="64" />
                                        }
                                        else
                                        {
                                            <img class="post-share-img circular-image" src="~/@Model.GetUserPicture(authorPostID)" width="64" height="64" />
                                        }
                                    </a>
                                    <h4 class="media-heading">@authorName</h4>
                                    <p>
                                        @if ((bool)item.AuthorPost.hasFilmLink)
                                        {@Html.Raw(item.AuthorPost.PostContent) }
                                    else
                                    { @item.AuthorPost.PostContent}
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else if (item.PictureChange == true)
                {
                    <div class="profile-content-pane">
                        <div id="@(divId + "_1")" class="media">
                            <div id="@(divId + "_2")" class="media-body">
                                <p>@item.PostContent</p>
                                <div id="@(divId+"_3")" class="profile-content-pane-img">
                                    <img src="@Model.GetUserPicture(item.PostId)" class="profile-content-img" />
                                </div>
                                @* JS inserts buttons here *@
                            </div>
                        </div>
                    </div>
                }
                else // display standard post
                {
                    <div class="profile-content-pane">
                        <div id="@(divId + "_1")" class="media">
                            <div id="@(divId + "_2")" class="media-body post-body">

                                <p id="@(divId+"_3")">
                                    @if ((bool)item.hasFilmLink)
                                    {@Html.Raw(item.PostContent) }
                                else
                                { @item.PostContent}
                                </p>
                            </div>

                        </div>
                    </div>
                }

                bool isUserPostOrAdmin = false;
                if (Model.IsUserPost(id = item.PostId) == true || ViewBag.IsAdmin)
                {
                    isUserPostOrAdmin = true;
                }

                <script type="text/javascript">
                    returnPost("@divId", @Model.GetProfileId(postid = item.PostId), @item.PostId, "@Model.GetFirstName(postid = item.PostId)",
                        "@Model.GetLastName(postid = item.PostId)", "@Model.GetUserPicture(postid = item.PostId)", "@item.DatePosted",
                        @Json.Encode(item.Popular), @Model.GetAwards(id = item.PostId), @Json.Encode(Model.AwardGiven(postid = item.PostId)), @Json.Encode(isUserPostOrAdmin), @item.PostComments.Count);
                </script>

                <div id="Comments-@item.PostId"></div>

                <script>
                        var rendered = false;
                        $("#post-@item.PostId").click(function () {
                            if (!rendered) {

                                $.ajax({
                                    url: '@Url.Action("IndexPostCommentsPartial", "Post")',
                                    type: "GET",
                                    data: {i_d: @item.PostId},
                                    contentType: "application/json; charset=utf-8",
                                    success: function (result) {
                                    //alert("success");
                                    $("#Comments-@item.PostId").html(result);
                                    rendered = true;
                                    },
                                    error: function (xhr) {
                                    alert("error");
                                    }

                                    });
                            } else {
                                $('#Comments-@item.PostId').html("");
                                rendered = false;
                            }
                        });
                </script>
            }

            <div id="txt-white">
                Page @(Model.PostList.PageCount < Model.PostList.PageNumber ? 0 : Model.PostList.PageNumber) of @Model.PostList.PageCount
            </div>
            @Html.PagedListPager(Model.PostList, page => Url.Action("Index", new { page }))

        </div>
    </div>
    
</div>


@Scripts.Render("~/Content/Scripts/CharCounter.js")