@model HiveData.ViewModels.PostFeedViewModel
@using Microsoft.AspNet.Identity;
@using PagedList.Mvc;
@using HiveData.Repository;
    @{
        ViewBag.Title = "Home Page";
        string userid = User.Identity.GetUserId();
        int postid = 0;
        int id = 0;
    }

    @if (User.Identity.IsAuthenticated)
    {
        <table class="table">
            <tr>
                <th>
                    Test Buttons/Links
                </th>
            </tr>
            <tr>
                <td>
                    @Html.ActionLink("Create Post", "Create", "Post")
                </td>
                <td>
                    @Html.ActionLink("Get Current Users Posts", "GetCurrUserPosts", "Post")
                </td>
                <td>
                    @Html.ActionLink("Send Notification to self", "TestSendNotification", "Notification")
                </td>
            </tr>
        </table>
    }

    <h2>Home Feed</h2>

    @foreach (var item in Model.PostList)
    {
        <div class="container">
            <div class="well">
                <div class="media">
                    @*<a class="pull-left" href="@Url.Action("ViewProfile", "Profile", new { id = item.ProfileId })" )">
                        <img src="~/@Model.GetUserPicture(postid = item.ProfileId)" width="140" height="140" />
                    </a>*@
                    <div class="media-body">
                        <h4 class="media-heading">@*@Html.ActionLink(@Model.GetFirstName(postid = item.ProfileId) + " " + Model.GetLastName(postid = item.ProfileId), "ViewProfile", "Profile", new { id = item.ProfileId }, new { })*@Temp</h4>
                        <p>
                            @item.PostContent
                        </p>
                        <ul class="list-inline list-unstyled">
                            <li> @item.DatePosted </li>
                            <li>|</li>
                            @if (item.Awards < 2)
                            {
                                <li> @item.Awards Award</li>
                            }
                            else
                            {
                                <li> @item.Awards Awards</li>
                            }
                        </ul>
                        <ul class="list-inline list-unstyled"> 
                            <li>@Html.ActionLink("Award", "GiveAward", "Post", new { Id = item.PostId }, new { })</li>                          
                            <li>|</li>
                            <li>@Html.ActionLink("Comment", "")
                            <li>|</li>
                            <li>@Html.ActionLink("Share", "")</li>
                            <li>|</li>
                          @* @if (userid == item.UserId)
                            {
                                <li>@Html.ActionLink("Remove", "DeletePost", "Post", new { id = item.PostId }, null)</li>
                                <li>|</li>
                                <li>@Html.ActionLink("Edit", "EditPost", "Post", new { id = item.PostId }, null)</li>
                            } *@
                        </ul> 

                    </div>
                </div>
            </div>
        </div>

    }
    Page @(Model.PostList.PageCount < Model.PostList.PageNumber ? 0 : Model.PostList.PageNumber) of @Model.PostList.PageCount
    @Html.PagedListPager(Model.PostList, page => Url.Action("Index", new { page }))